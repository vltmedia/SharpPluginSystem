name: Build, Package, and Release

on:
  workflow_dispatch:
  release:
    types: [published]   # Triggers the workflow on a new release creation

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Solution in Any CPU Configuration
        run: dotnet build --configuration Release --property Platform="Any CPU" || dotnet build --configuration Release

      - name: Publish Package
        run: dotnet pack --configuration Release --property Platform="Any CPU" --output ./artifacts || dotnet pack --configuration Release --output ./artifacts

      - name: Delete Existing Release if Exists
        run: |
          gh release delete "${GITHUB_REF_NAME}" -y || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload .nupkg artifacts to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: nupkg
          path: './artifacts/*.nupkg' # This should match the output directory specified in dotnet pack

      - name: List files in artifacts directory (before release upload)
        run: ls -R ./artifacts || echo "No artifacts found"
        shell: bash

 
    
      - name: Find and Rename .nupkg to input.nupkg
        run: |
          # Find the first .nupkg file in the artifacts directory
          file=$(find ./artifacts -name "*.nupkg" | head -n 1)
          if [ -z "$file" ]; then
            echo "No .nupkg file found in the artifacts directory."
            exit 1
          else
            echo "Found .nupkg file: $file"
            mv "$file" ./artifacts/input.nupkg
            echo "Renamed $file to input.nupkg"
          fi
        shell: bash
          
      - name: List files in Release directory (before release upload)
        run: ls -R . || echo "No artifacts found"
        shell: bash

    
      - name: Upload .nupkg to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/input.nupkg # Correct path to the artifacts folder
          asset_name: SharpREST_${{ github.ref_name}}.nupkg
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
