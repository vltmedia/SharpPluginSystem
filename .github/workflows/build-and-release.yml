name: Build, Package, and Release

on:
  push:
    tags:
      - 'v*'   # Triggers on version tags like v1.0, v2.1, etc.
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'
      - name: Restore dependencies
        run: dotnet restore

      - name: Build Solution in Any CPU Configuration
        run: dotnet build --configuration Release --property Platform="Any CPU" || dotnet build --configuration Release

      - name: Publish Package
        run: dotnet pack --configuration Release --property Platform="Any CPU" --output ./artifacts || dotnet pack --configuration Release --output ./artifacts

      - name: Delete Existing Release if Exists
        run: |
          gh release delete "${GITHUB_REF_NAME}" -y || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          
      - name: Upload .nupkg artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nupkg
          path: 'bin/Release/*.nupkg' # Searches all projects for .nupkg files in default output paths

      - name: Upload .nupkg to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: 'bin/Release/*.nupkg'
          asset_name: package-${{ github.ref_name }}.nupkg
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
