# GitHub Actions Workflow - Updated

name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest

    strategy:
      matrix:
        platform: [x64, x86]
        configuration: [Release, Debug]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.x' # Adjust to your .NET version

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration ${{ matrix.configuration }} --no-restore --output ./bin/${{ matrix.platform }}/${{ matrix.configuration }}

    - name: Pack solution
      run: dotnet pack --configuration ${{ matrix.configuration }} --output ./bin/${{ matrix.platform }}/${{ matrix.configuration }} --no-build

    - name: Get version and create release tag
      id: get_version
      run: |
        VERSION=$(dotnet run --project path/to/your/project.csproj -- --version)
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
      shell: bash

    - name: Create release tag
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: "Release v${{ env.VERSION }}"
        draft: false
        prerelease: false

    - name: Upload .nupkg files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/${{ matrix.platform }}/${{ matrix.configuration }}/*.nupkg
        asset_name: "${{ matrix.platform }}-${{ matrix.configuration }}-${{ env.VERSION }}.nupkg"
        asset_content_type: application/zip
